name: delete-and-import-unmanaged-solution

on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: "name of the Solution in Dataverse environment"
        required: true
        default: yoursolutionname
      environment_url:
        description: "http endpoint of your Dataverse environment"
        required: true
        default: "https://[your-env].crm[x].dynamics.com"
      ref:
        description: "the ref (branch, commit, tag) you want to import"
        required: true
        default: "main"

jobs:
  get-subdomain:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: get-subdomain
        uses: ./.github/actions/get-subdomain
        with:
          url: ${{ github.event.inputs.environment_url }}
    outputs:
      subdomain: ${{ steps.get-subdomain.outputs.subdomain }}

  delete-unmanaged-solution-and-components-from-environment:
    uses: devkeydet/pva-alm/.github/workflows/zz-r-delete-unmanaged-solution-and-components-from-environment.yml@main
    with:
      solution_name: ${{ github.event.inputs.solution_name }}
      environment_url: ${{ github.event.inputs.environment_url }}
    secrets:
      tenant_id: ${{ secrets.TENANT_ID }}
      client_id: ${{ secrets.CLIENT_ID }}
      client_secret: ${{ secrets.CLIENT_SECRET }}

  build-solution:
    uses: devkeydet/pva-alm/.github/workflows/zz-r-build-solution.yml@main
    needs: delete-unmanaged-solution-and-components-from-environment
    with:
      ref: ${{ github.event.inputs.ref }}
      solution_name: ${{ github.event.inputs.solution_name }}
      solution_version_major_minor: "0.0"
      dev_build: true  

  deploy-solution:  
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    needs: [build-solution,get-subdomain]
    steps:
    # Solutions cannot be imported in parallel, so we queue
    - uses: ahmadnassri/action-workflow-queue@v1
    - uses: actions/checkout@v2
    - id: setOutput
      name: get-solution-name-from-tag
      run: |
        $tag = "${{ github.event.inputs.tag }}"
        $splitArray = $tag -split "-"
        $solutionName = $splitArray[0]
        echo "solution_name=$solutionName" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      shell: pwsh
    - name: deploy-solution
      uses: ./.github/actions/deploy-solution
      with:
        environment_url: ${{ github.event.inputs.environment_url }}
        solution_name: ${{ env.solution_name }}
        environment: ${{ needs.get-subdomain.outputs.subdomain }}
        unmanaged: true
        secrets: ${{ toJSON(secrets) }}
    outputs:
      solution_name: ${{ env.solution_name }}
  
  turn-on-flows:
    runs-on: windows-latest
    needs: [deploy-solution, get-subdomain]
    environment: ${{ needs.get-subdomain.outputs.subdomain }}
    steps:
      - uses: actions/checkout@v2
      - id: turn-on-flows-impersonation
        uses: ./.github/actions/turn-on-flows-impersonation
        with:
          environment_url: ${{ github.event.inputs.environment_url }}
          solution_name: ${{ github.event.inputs.solution_name }}
          tenant_id: ${{ secrets.TENANT_ID }}
          app_id: ${{ secrets.CLIENT_ID }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          secrets: ${{ toJSON(secrets) }}

