name: deploy-prod

on:
  workflow_dispatch:
    inputs:
      tag:
        required: true
        description: "GitHub tag for solution-version to deploy"

env:
  environment: prod

jobs:
  deploy-prod:  
    runs-on: ubuntu-latest
    env:
      environment: prod
    environment: ${{ env.environment }}
    steps:
    # Solutions cannot be imported in parallel, so we queue
    - uses: ahmadnassri/action-workflow-queue@v1
    - uses: actions/checkout@v2
    - id: setOutput
      name: get-solution-name-from-tag
      run: |
        $tag = "${{ github.event.inputs.tag }}"
        $splitArray = $tag -split "-"
        $solutionName = $splitArray[0]
        echo "solution_name=$solutionName" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      shell: pwsh
    - name: deploy-solution
      uses: ./.github/actions/deploy-solution
      with:
        solution_name: ${{ env.solution_name }}
        environment: "prod"
        tag: ${{ github.event.inputs.tag }}
        secrets: ${{ toJSON(secrets) }}
    outputs:
      solution_name: ${{ env.solution_name }}
  
  turn-on-flows:
    runs-on: windows-latest
    needs: deploy-prod
    environment: "prod"
    steps:
      - uses: actions/checkout@v2
      - id: turn-on-flows-impersonation
        uses: ./.github/actions/turn-on-flows-impersonation
        with:
          environment_url: ${{ secrets.ENVIRONMENT_URL }}
          solution_name: ${{ needs.deploy-prod.outputs.solution_name }}
          tenant_id: ${{ secrets.TENANT_ID }}
          app_id: ${{ secrets.CLIENT_ID }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          secrets: ${{ toJSON(secrets) }}

  #TODO: Create a release in GitHub
