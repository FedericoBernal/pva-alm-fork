name: deploy-prod

on:
  workflow_dispatch:
    inputs:
      tag:
        required: true
        description: "GitHub tag for solution-version to deploy"

jobs:
  get-solution-name-from-tag:
    runs-on: ubuntu-latest
    steps:
      - id: setOutput
        run: |
          $tag = "${{ github.event.inputs.tag }}"
          $splitArray = $tag -split "-"
          $solutionName = $splitArray[0]
          echo "solution_name=$solutionName" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
        shell: pwsh
      - run: |
          echo "${{ env.solution_name }}"
    outputs:
      solution_name: ${{ env.solution_name }}

  deploy-prod:
    needs: get-solution-name-from-tag
    uses: devkeydet/pva-alm/.github/workflows/zz-r-deploy-solution.yml@main
    with:
      solution_name: ${{ needs.get-solution-name-from-tag.outputs.solution_name}}
      environment: "prod"
      tag: ${{ github.event.inputs.tag }}
    secrets:
      environment_url: ${{ secrets.ENVIRONMENT_URL }}
      tenant_id: ${{ secrets.TENANT_ID }}
      client_id: ${{ secrets.CLIENT_ID }}
      client_secret: ${{ secrets.CLIENT_SECRET }}
      secrets: ${{ toJSON(secrets) }}
  
  turn-on-flows:
    runs-on: windows-latest
    needs: [deploy-prod,get-solution-name-from-tag]
    environment: "prod"
    steps:
      - uses: actions/checkout@v2
      - id: turn-on-flows-impersonation
        uses: ./.github/actions/turn-on-flows-impersonation
        with:
          environment_url: ${{ github.event.inputs.environment_url }}
          solution_name: ${{ needs.get-solution-name-from-tag.outputs.solution_name}}
          tenant_id: ${{ secrets.TENANT_ID }}
          app_id: ${{ secrets.CLIENT_ID }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
          secrets: ${{ toJSON(secrets) }}

  #TODO: Create a release in GitHub
